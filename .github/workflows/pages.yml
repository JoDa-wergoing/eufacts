name: Deploy website (site/ + data/) to GitHub Pages

on:
  push:
    branches: [ main ]
    paths:
      - "site/**"
      - "data/**"
      - ".github/workflows/pages.yml"
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare site folder (preserve HTML + copy data + build latest aliases)
        shell: bash
        run: |
          set -euxo pipefail

          # 1) Vereist: site/ met je index.html
          test -d site || (echo "site/ ontbreekt" && exit 1)
          test -f site/index.html || (echo "site/index.html ontbreekt" && exit 1)

          # 2) Kopieer data/ mee naar de publicatiemap
          mkdir -p site/data
          rsync -a --delete data/ site/data/ || true

          # 3) Maak generieke 'latest' aliassen voor ALLE datasets in snapshots
          mkdir -p site/data/latest
          if [ -d data/snapshots ]; then
            # verzamel unieke bestandsbasenamen (zonder .json)
            IFS=$'\n' read -r -d '' -a DATASETS < <(find data/snapshots -type f -name '*.json' -printf '%f\n' | sed 's/\.json$//' | sort -u && printf '\0') || true

            for ds in "${DATASETS[@]}"; do
              # pak de nieuwste file voor deze dataset (op basis van mtime)
              latest_json="$(ls -t data/snapshots/*/${ds}.json 2>/dev/null | head -n1 || true)"
              if [ -n "${latest_json}" ]; then
                cp "${latest_json}" "site/data/latest/${ds}.json"
                echo "Aliased ${latest_json} -> site/data/latest/${ds}.json"
              else
                echo "Geen bestand gevonden voor dataset ${ds} — sla over."
              fi
            done
          else
            echo "Geen data/snapshots map — sla latest-alias stap over."
          fi

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: site

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
