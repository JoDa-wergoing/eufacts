name: Deploy website (site/ + data/) to GitHub Pages

on:
  push:
    branches: [ main ]
    paths:
      - "site/**"
      - "data/**"
      - ".github/workflows/pages.yml"
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare site folder (preserve HTML + copy data + build latest aliases)
        shell: bash
        run: |
          set -Eeuo pipefail

          # 1) Vereist: site/ met index.html
          test -d site || (echo "site/ ontbreekt" && exit 1)
          test -f site/index.html || (echo "site/index.html ontbreekt" && exit 1)

          # 2) Kopieer data/ naar publicatiemap
          mkdir -p site/data
          rsync -a --delete data/ site/data/ || true

          # 3) 'latest' aliassen voor ALLE datasets in snapshots/ (pak de nieuwste per bestandsnaam)
          mkdir -p site/data/latest
          if [ -d data/snapshots ]; then
            mapfile -t SNAP_JSONS < <(ls -1t data/snapshots/*/*.json 2>/dev/null || true)

            # Associatieve array voor de-dedupe (eerste = nieuwste wint)
            declare -A seen=()

            for f in "${SNAP_JSONS[@]}"; do
              base="${f##*/}"            # bv. teina230.json
              base_norm="${base//_/-}"   # underscores -> koppeltekens

              # set -u safe: check of key al bestaat
              if [[ -z "${seen[$base]+x}" ]]; then
                cp "$f" "site/data/latest/$base_norm"
                echo "Aliased $f -> site/data/latest/$base_norm"
                seen["$base"]=1
              fi
            done
          fi

          # 4) 'latest' aliassen voor timeseries/ (alle JSONs)
          if [ -d data/timeseries ]; then
            shopt -s nullglob
            for f in data/timeseries/*.json; do
              base="${f##*/}"
              base_norm="${base//_/-}"
              cp "$f" "site/data/latest/$base_norm"
              echo "Aliased $f -> site/data/latest/$base_norm"
            done
            shopt -u nullglob
          fi

          # 5) Diagnose
          echo "::group::Listing site/data/latest"
          ls -al site/data/latest || true
          echo "::endgroup::"

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: site

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
