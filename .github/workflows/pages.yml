name: Deploy website (site/ + data/) to GitHub Pages

on:
  push:
    branches: [ main ]
    paths:
      - "site/**"
      - "data/**"
      - ".github/workflows/pages.yml"
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Publiceer jouw bestaande site/index.html; kopieer data mee; maak 'latest' alias
      - name: Prepare site folder (preserve your HTML)
        shell: bash
        run: |
          set -euxo pipefail

          # 1) Vereist: site/ met jouw v2 index.html (niet overschrijven!)
          test -d site || (echo "site/ ontbreekt" && exit 1)
          test -f site/index.html || (echo "site/index.html ontbreekt" && exit 1)

          # 2) Neem data mee zodat ./data/... op Pages werkt
          mkdir -p site/data
          rsync -a --delete data/ site/data/ || true

          # 3) Maak een 'latest' alias die jouw viewer verwacht
          latest_json="$(ls -t data/snapshots/*/*.json 2>/dev/null | head -n1 || true)"
          if [ -n "${latest_json}" ]; then
            mkdir -p site/data/latest
            cp "${latest_json}" "site/data/latest/teina230.json"
          else
            echo "Geen snapshots gevonden voor latest-alias â€” sla over."
          fi

          # 4) Snelle sanity check op paden in HTML (relatief pad aanbevolen)
          grep -q "./data/latest/teina230.json" site/index.html || true

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: site

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
